What happens when you initialize a repository? Why do you need to do it?

	.git directory, which contains system files, is created. This enables
	tracking changes made to the files in the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	working directory is a local directory where files are stored, whereas
	the staging area stands for intermediate stage where the snapshot of the
	working directory files are temporarily located before they become commited

How can you use the staging area to make sure you have one commit per logical
change?

	changes introduced can be added to the staging area and compared to the
	working directory and repository

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	In case when multiple variants of code are needed. These can be worked out in
	different branches. Especially helpful branches can be, in case if at some
	later point in time it becomes clear that the code of both branches needs some
	modification ex. bugfix, in this case, the code needs to be fixed only once
	before branching and it will then affect both branches.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
